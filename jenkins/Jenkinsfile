// node {
//     stage('Build') {
//         docker.image('python:2-alpine').inside {
//             sh 'python -m py_compile sources/add2vals.py sources/calc.py'
//         }
//     }
//     stage('Test') {
//         docker.image('qnib/pytest').inside {
//             try {
//                 sh 'py.test --verbose --junit-xml test-reports/results.xml sources/test_calc.py'
//             } catch (Exception e) {
//                 echo 'Error: ' + e.toString()
//             } finally {
//                 always {
//                     junit 'test-reports/results.xml'
//                 }
//                 input message: 'Lanjutkan ke tahap Deploy? (Click "Proceed" to continue)'
//             }
//         }
//     }
//     stage('Deploy') {
//         docker.image('cdrx/pyinstaller-linux:python2').inside("--entrypoint=''") {
//             try {
//                 sh 'pyinstaller --onefile sources/add2vals.py'
//             } catch (Exception e) {
//                 echo 'Error: ' + e.toString()
//             } finally {
//                 success {
//                     archiveArtifacts 'dist/add2vals'
//                     sleep 60
//                 }
//             }
//         }
//     }
// }

pipeline {
    agent none
    options {
        skipStagesAfterUnstable()
    }
    stages {
        stage('Build') {
            agent {
                docker {
                    image 'python:2-alpine'
                }
            }
            steps {
                sh 'python -m py_compile sources/add2vals.py sources/calc.py'
                stash(name: 'compiled-results', includes: 'sources/*.py*')
            }
        }
        stage('Test') {
            agent {
                docker {
                    image 'qnib/pytest'
                }
            }
            steps {
                sh 'py.test --junit-xml test-reports/results.xml sources/test_calc.py'
            }
            post {
                always {
                    junit 'test-reports/results.xml'
                }
            }
        }
        stage('Deploy') { 
            agent any
            environment { 
                VOLUME = '$(pwd)/sources:/src'
                IMAGE = 'cdrx/pyinstaller-linux:python2'
            }
            steps {
                dir(path: env.BUILD_ID) { 
                    unstash(name: 'compiled-results') 
                    sh "sleep 60"
                    sh "docker run --rm -v ${VOLUME} ${IMAGE} 'pyinstaller -F add2vals.py'" 
                }
            }
            post {
                success {
                    archiveArtifacts "${env.BUILD_ID}/sources/dist/add2vals" 
                    sh "docker run --rm -v ${VOLUME} ${IMAGE} 'rm -rf build dist'"
                }
            }
        }
    }
}
